// https://code.visualstudio.com/docs/editor/tasks
{
    // 有关 tasks.json 格式的文档，请参见
    // https://go.microsoft.com/fwlink/?LinkId=733558
    "version": "2.0.0",
    "tasks": [{
            "label": "Build", // 任务名称, 与launch.json的preLaunchTask相对应
            // 如果使用Clang编写C语言, 把command的值改成clang。
            "command": "clang", // 编译c语言
            // 如果使用MinGW, 编译C用gcc, 编译c++用g++, 并把-target和-fcolor那两条删去
            //"command": "clang++", // 编译C++
            "args": [
                "${file}",
                "-o", // 指定输出文件名, 不加该参数则默认输出a.exe, Linux下默认a.out
                "${fileDirname}/${fileBasenameNoExtension}.exe",
                "-g", // 生成和调试有关的信息
                "-Wall", // 开启额外警告
                "-static-libgcc", // 静态链接
                "-fcolor-diagnostics", // 彩色的错误信息？但貌似clang默认开启而gcc不接受此参数
                "--target=x86_64-w64-mingw", // clang的默认target为msvc, 不加这一条就会找不到头文件；Linux下去掉这一条
                "-std=c11" // C语言最新标准为c11, 或根据自己的需要进行修改
            ], // 编译命令参数
            "windows": {
                "args": [
                    "${file}",
                    "-o", // 指定输出文件名, 不加该参数则默认输出a.exe, Linux下默认a.out
                    "${fileDirname}/${fileBasenameNoExtension}.exe",
                    "-g", // 生成和调试有关的信息
                    "-Wall", // 开启额外警告
                    "-static-libgcc", // 静态链接
                    "-fcolor-diagnostics", // 彩色的错误信息？但貌似clang默认开启而gcc不接受此参数
                    "--target=x86_64-w64-mingw", // clang的默认target为msvc, 不加这一条就会找不到头文件；Linux下去掉这一条
                    "-std=c11" // C语言最新标准为c11, 或根据自己的需要进行修改
                ]
            },
            "presentation": {
                "echo": false,
                "reveal": "always", // 在“终端”中显示编译信息的策略, 可以为always, silent, never。具体参见VSC的文档
                "focus": true, // 设为true后可以使执行task时焦点聚集在终端, 但对编译c和c++来说, 设为true没有意义
                "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "Run",
            "type": "shell",
            "dependsOn": "Build",
            "command": "${fileDirname}/${fileBasenameNoExtension}.o",
            "windows": {
                "command": "${fileDirname}/${fileBasenameNoExtension}.exe"
            },
            "args": [],
            "presentation": {
                "reveal": "always",
                "focus": true
            },
            "problemMatcher": [],
            "group": {
                "kind": "test",
                "isDefault": true
            }
        }
    ]
}